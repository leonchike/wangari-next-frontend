import React, { useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import styled from "styled-components";
import { useQuery } from "react-query";

import PublicLayout from "@/components/layouts/PublicLayout";
import WelcomeImages from "@/components/WelcomeImages";
import Icon from "@/components/Icon";
import UnstyledButton from "@/components/UnstyledButton";
import VisuallyHidden from "@/components/VisuallyHidden";
import { fadeIn } from "@/styles/animations";

import {
  getCollectionSort,
  getAllCollectionData,
} from "@/api/public/publicAPI";

const Home = () => {
  const [isMounted, setIsMounted] = useState(false);
  const collectionSort = useQuery(["collectionSort"], getCollectionSort);
  const collections = useQuery(["collections"], getAllCollectionData);

  let nextUrl = "/art/about";

  useEffect(() => {
    setIsMounted(true);
  }, []);

  // logic to get collections data and collections order > filter collections data to get the first collection > construct the url for the first collection and update the nexturl variable.

  const arrayOfOrderedCollections =
    collectionSort?.data?.data?.data[0]?.collections;
  const arrayOfAllCollections = collections?.data?.data?.data;

  if (arrayOfOrderedCollections && arrayOfAllCollections) {
    const filteredArray = arrayOfOrderedCollections.filter((collection) => {
      const collectionId = collection;
      const collectionData = arrayOfAllCollections.find(
        (collectionObj) => collectionObj._id === collectionId
      );
      if (collectionData) {
        return collectionId;
      }
    });

    if (filteredArray.length > 0) {
      nextUrl = `/art/collections/${filteredArray[0]}`;
    }
  }

  return (
    <>
      <Head>
        <title>Wangari Mathenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Link href={nextUrl}>
        <Main>
          {isMounted && (
            <Button>
              <VisuallyHidden>Next</VisuallyHidden>
              <Icon id="arrowRight" size={50} />
            </Button>
          )}
          <WelcomeImages />
        </Main>
      </Link>
    </>
  );
};

Home.getLayout = function getLayout(page) {
  return <PublicLayout>{page}</PublicLayout>;
};

const Button = styled(UnstyledButton)`
  opacity: 0;
  position: absolute;
  top: 50%;
  left: 3rem;
  z-index: 1;
  color: var(--color-white);
  transition: transform 300ms ease-in-out, opacity 200ms ease-in-out;

  &:hover {
    opacity: 0.9;
    transform: scale(1.1);
  }

  animation: ${fadeIn} 2s 3s ease-in-out both;
`;

const Main = styled.div`
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: clip;

  animation: ${fadeIn} 2s 1s ease-in-out both;
`;

export default Home;
